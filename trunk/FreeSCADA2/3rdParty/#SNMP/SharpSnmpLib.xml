<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SharpSnmpLib</name>
    </assembly>
    <members>
        <member name="T:Lextm.SharpSnmpLib.BitString">
            <summary>
            BitString type.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.ISnmpData">
            <summary>
            SNMP data entity.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ISnmpData.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ISnmpData.ToBytes">
            <summary>
            Converts to the bytes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ISnmpData.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.ISnmpData.TypeCode">
            <summary>
            Type code
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.BitString.#ctor(System.Byte[])">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.BitString"/> from raw bytes.
            </summary>
            <param name="raw">Raw bytes.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.BitString.#ctor(System.Int32,System.Int32[])">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.BitString"/> with a bit length and a bit array.
            </summary>
            <param name="number">Bit length.</param>
            <param name="bits">Bit array.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.BitString.#ctor(Lextm.SharpSnmpLib.BitString)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.BitString"/> from a <see cref="T:Lextm.SharpSnmpLib.BitString"/>.
            </summary>
            <param name="other">Another <see cref="T:Lextm.SharpSnmpLib.BitString"/> instance.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.BitString.And(Lextm.SharpSnmpLib.BitString)">
            <summary>
            And operator.
            </summary>
            <param name="other">Another <see cref="T:Lextm.SharpSnmpLib.BitString"/> instance.</param>
            <returns>A <see cref="T:Lextm.SharpSnmpLib.BitString"/> that is the result of the AND operation.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.BitString.Or(Lextm.SharpSnmpLib.BitString)">
            <summary>
            Or operator.
            </summary>
            <param name="other">Another <see cref="T:Lextm.SharpSnmpLib.BitString"/> instance.</param>
            <returns>A <see cref="T:Lextm.SharpSnmpLib.BitString"/> that is the result of the OR operation.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.BitString.Cat(Lextm.SharpSnmpLib.BitString)">
            <summary>
            Cat operator.
            </summary>
            <param name="other">Another <see cref="T:Lextm.SharpSnmpLib.BitString"/> instance.</param>
            <returns>A <see cref="T:Lextm.SharpSnmpLib.BitString"/> that is the result of the CAT operation.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.BitString.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:Lextm.SharpSnmpLib.BitString"/>.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.BitString.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.BitString"/>.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.BitString.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.BitString.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.BitString.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.BitString"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:Lextm.SharpSnmpLib.BitString"/>. </param>
            <returns><value>true</value> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.BitString"/>; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.BitString.op_Equality(Lextm.SharpSnmpLib.BitString,Lextm.SharpSnmpLib.BitString)">
            <summary>
            The equality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.BitString"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.BitString"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.BitString.op_Inequality(Lextm.SharpSnmpLib.BitString,Lextm.SharpSnmpLib.BitString)">
            <summary>
            The inequality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.BitString"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.BitString"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.BitString.Equals(Lextm.SharpSnmpLib.BitString)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><value>true</value> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.BitString.Equals(Lextm.SharpSnmpLib.BitString,Lextm.SharpSnmpLib.BitString)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.BitString.Item(System.Int32)">
            <summary>
            Returns a bit at specific index.
            </summary>
            <param name="index">Index.</param>
            <returns>Bit inside string at the specific index.</returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.BitString.Card">
            <summary>
            Gets a value that indicates how many bits are set.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.BitString.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Bool">
            <summary>
            Boolean type.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Bool.#ctor(System.Byte[])">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Bool"/> instance from raw bytes.
            </summary>
            <param name="raw">Raw bytes</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Bool.ToBoolean">
            <summary>
            Returns a <see cref="T:System.Boolean"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Bool"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Bool.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Bool"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Bool.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Bool.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Bool.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:Lextm.SharpSnmpLib.Bool"/>.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Bool.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.Bool"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:Lextm.SharpSnmpLib.Bool"/>. </param>
            <returns><value>true</value> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.Bool"/>; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Bool.op_Equality(Lextm.SharpSnmpLib.Bool,Lextm.SharpSnmpLib.Bool)">
            <summary>
            The equality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Bool"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Bool"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Bool.op_Inequality(Lextm.SharpSnmpLib.Bool,Lextm.SharpSnmpLib.Bool)">
            <summary>
            The inequality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Bool"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Bool"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Bool.Equals(Lextm.SharpSnmpLib.Bool)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><value>true</value> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Bool.Equals(Lextm.SharpSnmpLib.Bool,Lextm.SharpSnmpLib.Bool)">
            <summary>
            The comparison.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Bool"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Bool"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Bool.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.ByteTool">
            <summary>
            Description of ByteTool.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ByteTool.Convert(System.String)">
            <summary>
            Converts the byte string.
            </summary>
            <param name="description">The description.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ByteTool.Convert(System.Byte[])">
            <summary>
            Converts the byte string.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ByteTool.ToBytes(Lextm.SharpSnmpLib.ISnmpData)">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Counter32">
            <summary>
            Counter32 type.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter32.#ctor(System.Byte[])">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Counter32"/> instance from raw bytes.
            </summary>
            <param name="raw"></param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter32.#ctor(System.UInt32)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Counter32"/> with a specific <see cref="T:System.UInt32"/>.
            </summary>
            <param name="value">Value</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter32.#ctor(System.Int32,System.IO.Stream)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Counter32"/> instance from stream.
            </summary>
            <param name="length">The length.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter32.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter32.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter32.ToUInt32">
            <summary>
            Returns a <see cref="T:System.UInt32"/> that represents a <see cref="T:Lextm.SharpSnmpLib.Counter32"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter32.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Counter32"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter32.GetRaw">
            <summary>
            Gets that raw bytes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter32.Equals(Lextm.SharpSnmpLib.Counter32)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><value>true</value> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter32.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.Counter32"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:Lextm.SharpSnmpLib.Counter32"/>. </param>
            <returns><value>true</value> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.Counter32"/>; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter32.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:Lextm.SharpSnmpLib.Counter32"/>.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter32.op_Equality(Lextm.SharpSnmpLib.Counter32,Lextm.SharpSnmpLib.Counter32)">
            <summary>
            The equality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Counter32"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Counter32"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter32.op_Inequality(Lextm.SharpSnmpLib.Counter32,Lextm.SharpSnmpLib.Counter32)">
            <summary>
            The inequality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Counter32"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Counter32"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter32.Equals(Lextm.SharpSnmpLib.Counter32,Lextm.SharpSnmpLib.Counter32)">
            <summary>
            The comparison.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Counter32"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Counter32"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Counter32.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Counter64">
            <summary>
            Counter64 type.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter64.#ctor(System.Byte[])">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Counter64"/> instance from raw bytes.
            </summary>
            <param name="raw"></param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter64.#ctor(System.UInt64)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Counter64"/> with a specific <see cref="T:System.UInt64"/>.
            </summary>
            <param name="value">Value</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter64.#ctor(System.Int32,System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Counter64"/> class.
            </summary>
            <param name="length">The length.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter64.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter64.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter64.ToUInt64">
            <summary>
            Returns a <see cref="T:System.UInt64"/> that represents a <see cref="T:Lextm.SharpSnmpLib.Counter64"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter64.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Counter64"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter64.GetRaw">
            <summary>
            Gets that raw bytes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter64.Equals(Lextm.SharpSnmpLib.Counter64)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><value>true</value> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter64.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.Counter64"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:Lextm.SharpSnmpLib.Counter64"/>. </param>
            <returns><value>true</value> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.Counter64"/>; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter64.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:Lextm.SharpSnmpLib.Counter64"/>.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter64.op_Equality(Lextm.SharpSnmpLib.Counter64,Lextm.SharpSnmpLib.Counter64)">
            <summary>
            The equality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Counter64"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Counter64"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter64.op_Inequality(Lextm.SharpSnmpLib.Counter64,Lextm.SharpSnmpLib.Counter64)">
            <summary>
            The inequality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Counter64"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Counter64"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter64.Equals(Lextm.SharpSnmpLib.Counter64,Lextm.SharpSnmpLib.Counter64)">
            <summary>
            The comparison.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Counter64"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Counter64"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Counter64.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.EndOfMibView">
            <summary>
            EndOfMibView exception.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.EndOfMibView.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.EndOfMibView"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:Lextm.SharpSnmpLib.EndOfMibView"/>. </param>
            <returns><value>true</value> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.EndOfMibView"/>; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.EndOfMibView.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:Lextm.SharpSnmpLib.Null"/>.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.EndOfMibView.Equals(Lextm.SharpSnmpLib.EndOfMibView)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><value>true</value> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.EndOfMibView.op_Equality(Lextm.SharpSnmpLib.EndOfMibView,Lextm.SharpSnmpLib.EndOfMibView)">
            <summary>
            The equality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.EndOfMibView"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.EndOfMibView"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.EndOfMibView.op_Inequality(Lextm.SharpSnmpLib.EndOfMibView,Lextm.SharpSnmpLib.EndOfMibView)">
            <summary>
            The inequality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.EndOfMibView"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.EndOfMibView"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.EndOfMibView.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.EndOfMibView.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.EndOfMibView.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Null"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.EndOfMibView.Equals(Lextm.SharpSnmpLib.EndOfMibView,Lextm.SharpSnmpLib.EndOfMibView)">
            <summary>
            The comparison.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.EndOfMibView"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.EndOfMibView"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.EndOfMibView.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.ErrorCode">
            <summary>
            Error code for SNMP operations.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.ErrorCode.NoError">
            <summary>
            There was no problem performing the request.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.ErrorCode.TooBig">
            <summary>
            The response to your request was too big to fit into one response.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.ErrorCode.NoSuchName">
            <summary>
            An agent was asked to get or set an OID that it can't find; i.e., the OID doesn't exist.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.ErrorCode.BadValue">
            <summary>
            A read-write or write-only object was set to an inconsistent value.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.ErrorCode.ReadOnly">
            <summary>
            This error is generally not used. The noSuchName error is equivalent to this one.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.ErrorCode.GenError">
            <summary>
            This is a catch-all error. If an error occurs for which none of the previous messages is appropriate, a genError is issued.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.ErrorCode.NoAccess">
            <summary>
            A set to an inaccessible variable was attempted. This typically occurs when the variable has an ACCESS type of not-accessible.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.ErrorCode.WrongType">
            <summary>
            An object was set to a type that is different from its definition. This error will occur if you try to set an object that is of type INTEGER to a string, for example.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.ErrorCode.WrongLength">
            <summary>
            An object's value was set to something other than what it calls for. For instance, a string can be defined to have a maximum character size. This error occurs if you try to set a string object to a value that exceeds its maximum length.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.ErrorCode.WrongEncoding">
            <summary>
            A set operation was attempted using the wrong encoding for the object being set.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.ErrorCode.WrongValue">
            <summary>
            A variable was set to a value it doesn't understand. This can occur when a read-write is defined as an enumeration, and you try to set it to a value that is not one of the enumerated types.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.ErrorCode.NoCreation">
            <summary>
            You tried to set a nonexistent variable or create a variable that doesn't exist in the MIB.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.ErrorCode.InconsistentValue">
            <summary>
            A MIB variable is in an inconsistent state, and is not accepting any set requests.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.ErrorCode.ResourceUnavailable">
            <summary>
            No system resources are available to perform a set.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.ErrorCode.CommitFailed">
            <summary>
            This is a catch-all error for set failures.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.ErrorCode.UndoFailed">
            <summary>
            A set failed and the agent was unable to roll back all the previous sets up until the point of failure.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.ErrorCode.AuthorizationError">
            <summary>
            An SNMP command could not be authenticated; in other words, someone has supplied an incorrect community string.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.ErrorCode.NotWritable">
            <summary>
            A variable will not accept a set, even though it is supposed to.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.ErrorCode.InconsistentName">
            <summary>
            You attempted to set a variable, but that attempt failed because the variable was in some kind of inconsistent state.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Gauge32">
            <summary>
            Gauge32 type.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Gauge32.#ctor(System.Byte[])">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Gauge32"/> instance from raw bytes.
            </summary>
            <param name="raw"></param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Gauge32.#ctor(System.UInt32)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Gauge32"/> with a specific <see cref="T:System.UInt32"/>.
            </summary>
            <param name="value">Value</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Gauge32.#ctor(System.Int32,System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Gauge32"/> class.
            </summary>
            <param name="length">The length.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Gauge32.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Gauge32.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Gauge32.ToUInt32">
            <summary>
            Returns a <see cref="T:System.UInt32"/> that represents a <see cref="T:Lextm.SharpSnmpLib.Gauge32"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Gauge32.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Gauge32"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Gauge32.Equals(Lextm.SharpSnmpLib.Gauge32)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><value>true</value> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Gauge32.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.Gauge32"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:Lextm.SharpSnmpLib.Gauge32"/>. </param>
            <returns><value>true</value> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.Gauge32"/>; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Gauge32.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:Lextm.SharpSnmpLib.Gauge32"/>.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Gauge32.op_Equality(Lextm.SharpSnmpLib.Gauge32,Lextm.SharpSnmpLib.Gauge32)">
            <summary>
            The equality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Gauge32"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Gauge32"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Gauge32.op_Inequality(Lextm.SharpSnmpLib.Gauge32,Lextm.SharpSnmpLib.Gauge32)">
            <summary>
            The inequality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Gauge32"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Gauge32"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Gauge32.Equals(Lextm.SharpSnmpLib.Gauge32,Lextm.SharpSnmpLib.Gauge32)">
            <summary>
            The comparison.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Gauge32"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Gauge32"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Gauge32.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.GeneralString">
            <summary>
            GeneralString type.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GeneralString.#ctor(System.Byte[])">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.GeneralString"/> from raw bytes (by cloning them).
            </summary>
            <param name="raw">Raw bytes</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GeneralString.#ctor(System.Byte[],System.Boolean)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.GeneralString"/> from raw bytes (by cloning them).
            </summary>
            <param name="raw">Raw bytes</param>
            <param name="cloning">true to clone the raw bytes, false to use them directly.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GeneralString.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.GeneralString"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GeneralString.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GeneralString.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GeneralString.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.GeneralString"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:Lextm.SharpSnmpLib.GeneralString"/>. </param>
            <returns><value>true</value> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.GeneralString"/>; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GeneralString.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:Lextm.SharpSnmpLib.GeneralString"/>.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GeneralString.op_Equality(Lextm.SharpSnmpLib.GeneralString,Lextm.SharpSnmpLib.GeneralString)">
            <summary>
            The equality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.GeneralString"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.GeneralString"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GeneralString.op_Inequality(Lextm.SharpSnmpLib.GeneralString,Lextm.SharpSnmpLib.GeneralString)">
            <summary>
            The inequality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.GeneralString"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.GeneralString"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GeneralString.Equals(Lextm.SharpSnmpLib.GeneralString)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><value>true</value> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GeneralString.Equals(Lextm.SharpSnmpLib.GeneralString,Lextm.SharpSnmpLib.GeneralString)">
            <summary>
            The comparison.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.GeneralString"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.GeneralString"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.GeneralString.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.GenericCode">
            <summary>
            Generic trap code.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.GenericCode.ColdStart">
            <summary>
            Indicates that the agent has rebooted. All management variables will be reset; specifically, Counters and Gauges will be reset to zero (0). One nice thing about the coldStart trap is that it can be used to determine when new hardware is added to the network. When a device is powered on, it sends this trap to its trap destination. If the trap destination is set correctly (i.e., to the IP address of your NMS) the NMS can receive the trap and determine whether it needs to manage the device.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.GenericCode.WarmStart">
            <summary>
            Indicates that the agent has reinitialized itself. None of the management variables will be reset.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.GenericCode.LinkDown">
            <summary>
            Sent when an interface on a device goes down. The first variable binding identifies which interface went down.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.GenericCode.LinkUp">
            <summary>
            Sent when an interface on a device comes back up. The first variable binding identifies which interface came back up.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.GenericCode.AuthenticationFailure">
            <summary>
            Indicates that someone has tried to query your agent with an incorrect community string; useful in determining if someone is trying to gain unauthorized access to one of your devices.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.GenericCode.EgpNeighborLoss">
            <summary>
            Indicates that an Exterior Gateway Protocol (EGP) neighbor has gone down.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.GenericCode.EnterpriseSpecific">
            <summary>
            Indicates that the trap is enterprise-specific. SNMP vendors and users define their own traps under the private-enterprise branch of the SMI object tree. To process this trap properly, the NMS has to decode the specific trap number that is part of the SNMP message.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.GetBulkRequestPdu">
            <summary>
            GETBULK request PDU.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.ISnmpPdu">
            <summary>
            SNMP PDU.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ISnmpPdu.ToMessageBody(Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.OctetString)">
            <summary>
            Converts the PDU to index complete message.
            </summary>
            <param name="version">Protocol version.</param>
            <param name="community">Community name.</param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.ISnmpPdu.RequestId">
            <summary>
            Gets the request ID.
            </summary>
            <value>The request ID.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.ISnmpPdu.ErrorStatus">
            <summary>
            Gets the error status.
            </summary>
            <value>The error status.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.ISnmpPdu.ErrorIndex">
            <summary>
            Gets the index of the error.
            </summary>
            <value>The index of the error.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.ISnmpPdu.Variables">
            <summary>
            Variable bindings.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GetBulkRequestPdu.#ctor(System.Int32,System.Int32,System.Int32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.GetBulkRequestPdu"/> with all contents.
            </summary>
            <param name="requestId">The request id.</param>
            <param name="nonRepeaters">Non-repeaters.</param>
            <param name="maxRepetitions">Max repetitions.</param>
            <param name="variables">Variables.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GetBulkRequestPdu.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.GetBulkRequestPdu"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GetBulkRequestPdu.ToMessageBody(Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.OctetString)">
            <summary>
            Converts to message body.
            </summary>
            <param name="version">Protocol version</param>
            <param name="community">Community name</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GetBulkRequestPdu.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GetBulkRequestPdu.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GetBulkRequestPdu.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.GetBulkRequestPdu"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.GetBulkRequestPdu.RequestId">
            <summary>
            Gets the request ID.
            </summary>
            <value>The request ID.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.GetBulkRequestPdu.ErrorStatus">
            <summary>
            Gets the error status.
            </summary>
            <value>The error status.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.GetBulkRequestPdu.ErrorIndex">
            <summary>
            Gets the index of the error.
            </summary>
            <value>The index of the error.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.GetBulkRequestPdu.Variables">
            <summary>
            Variables.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.GetBulkRequestPdu.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.GetNextRequestPdu">
            <summary>
            GETNEXT request PDU.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GetNextRequestPdu.#ctor(System.Int32,Lextm.SharpSnmpLib.ErrorCode,System.Int32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.GetNextRequestPdu"/> with all contents.
            </summary>
            <param name="requestId">The request id.</param>
            <param name="errorStatus">Error status</param>
            <param name="errorIndex">Error index</param>
            <param name="variables">Variables</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GetNextRequestPdu.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.GetNextRequestPdu"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GetNextRequestPdu.ToMessageBody(Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.OctetString)">
            <summary>
            Converts to message body.
            </summary>
            <param name="version">Protocol version</param>
            <param name="community">Community name</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GetNextRequestPdu.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GetNextRequestPdu.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GetNextRequestPdu.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.GetNextRequestPdu"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.GetNextRequestPdu.RequestId">
            <summary>
            Gets the request ID.
            </summary>
            <value>The request ID.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.GetNextRequestPdu.ErrorStatus">
            <summary>
            Gets the error status.
            </summary>
            <value>The error status.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.GetNextRequestPdu.ErrorIndex">
            <summary>
            Gets the index of the error.
            </summary>
            <value>The index of the error.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.GetNextRequestPdu.Variables">
            <summary>
            Variables.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.GetNextRequestPdu.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.GetRequestPdu">
            <summary>
            GET request PDU.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GetRequestPdu.#ctor(System.Int32,Lextm.SharpSnmpLib.ErrorCode,System.Int32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.GetRequestPdu"/> with all contents.
            </summary>
            <param name="requestId">The request id.</param>
            <param name="errorStatus">Error status</param>
            <param name="errorIndex">Error index</param>
            <param name="variables">Variables</param>      
        </member>
        <member name="M:Lextm.SharpSnmpLib.GetRequestPdu.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.GetRequestPdu"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GetRequestPdu.ToMessageBody(Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.OctetString)">
            <summary>
            Converts to message body.
            </summary>
            <param name="version">Protocol version</param>
            <param name="community">Community name</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GetRequestPdu.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GetRequestPdu.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GetRequestPdu.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.GetRequestPdu"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.GetRequestPdu.RequestId">
            <summary>
            Gets the request ID.
            </summary>
            <value>The request ID.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.GetRequestPdu.ErrorStatus">
            <summary>
            Gets the error status.
            </summary>
            <value>The error status.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.GetRequestPdu.ErrorIndex">
            <summary>
            Gets the index of the error.
            </summary>
            <value>The index of the error.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.GetRequestPdu.Variables">
            <summary>
            Variables.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.GetRequestPdu.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.GetResponsePdu">
            <summary>
            GET response PDU.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GetResponsePdu.#ctor(System.Int32,Lextm.SharpSnmpLib.ErrorCode,System.Int32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.GetResponsePdu"/> with all contents.
            </summary>
            <param name="requestId">The request ID.</param>
            <param name="errorStatus">Error status.</param>
            <param name="errorIndex">Error index.</param>
            <param name="variables">Variables.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GetResponsePdu.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.GetResponsePdu"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GetResponsePdu.ToMessageBody(Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.OctetString)">
            <summary>
            Converts to message body.
            </summary>
            <param name="version">Protocol version</param>
            <param name="community">Community name</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GetResponsePdu.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GetResponsePdu.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GetResponsePdu.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.GetResponsePdu"/>/
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.GetResponsePdu.RequestId">
            <summary>
            Gets the request ID.
            </summary>
            <value>The request ID.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.GetResponsePdu.ErrorStatus">
            <summary>
            Error status.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.GetResponsePdu.ErrorIndex">
            <summary>
            Error index.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.GetResponsePdu.Variables">
            <summary>
            Variables.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.GetResponsePdu.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Header">
            <summary>
            Header segment.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.ISegment">
            <summary>
            Segment interface.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ISegment.GetData(Lextm.SharpSnmpLib.VersionCode)">
            <summary>
            Gets the data.
            </summary>
            <param name="version">The version.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ISegment.ToSequence">
            <summary>
            Converts to <see cref="T:Lextm.SharpSnmpLib.Sequence"/> object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Header.#ctor(Lextm.SharpSnmpLib.ISnmpData)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Header"/> class.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Header.#ctor(Lextm.SharpSnmpLib.Integer32,Lextm.SharpSnmpLib.Integer32,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.Integer32)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Header"/> class.
            </summary>
            <param name="messageId">The message id.</param>
            <param name="maxMessageSize">Size of the max message.</param>
            <param name="securityBits">The flags.</param>
            <param name="securityModel">The security model.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Header.ToSequence">
            <summary>
            Converts to <see cref="T:Lextm.SharpSnmpLib.Sequence"/> object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Header.GetData(Lextm.SharpSnmpLib.VersionCode)">
            <summary>
            Gets the data.
            </summary>
            <param name="version">The version.</param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Header.Empty">
            <summary>
            Empty header.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Header.MessageId">
            <summary>
            Gets the message ID.
            </summary>
            <value>The message ID.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.InformRequestPdu">
            <summary>
            INFORM request PDU.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.InformRequestPdu.#ctor(System.Int32,Lextm.SharpSnmpLib.ObjectIdentifier,System.UInt32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.InformRequestPdu"/> instance with all content.
            </summary>
            <param name="requestId">The request id.</param>
            <param name="enterprise">Enterprise</param>
            <param name="time">Time stamp</param>
            <param name="variables">Variables</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.InformRequestPdu.#ctor(System.Byte[])">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.InformRequestPdu"/> with raw bytes.
            </summary>
            <param name="raw">Raw bytes</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.InformRequestPdu.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.InformRequestPdu"/> class.
            </summary>    
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.InformRequestPdu.ToMessageBody(Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.OctetString)">
            <summary>
            Converts to message body.
            </summary>
            <param name="version">Protocol version</param>
            <param name="community">Community name</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.InformRequestPdu.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.InformRequestPdu.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.InformRequestPdu.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.InformRequestPdu"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.InformRequestPdu.RequestId">
            <summary>
            Gets the request ID.
            </summary>
            <value>The request ID.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.InformRequestPdu.ErrorStatus">
            <summary>
            Gets the error status.
            </summary>
            <value>The error status.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.InformRequestPdu.ErrorIndex">
            <summary>
            Gets the index of the error.
            </summary>
            <value>The index of the error.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.InformRequestPdu.Variables">
            <summary>
            Variables.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.InformRequestPdu.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Integer64">
            <summary>
            Integer64 type.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Integer64.ToInt64">
            <summary>
            Returns an <see cref="T:System.Int64"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Integer64"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Integer64.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.Integer64"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:Lextm.SharpSnmpLib.Integer64"/>. </param>
            <returns><value>true</value> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.Integer64"/>; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Integer64.Equals(Lextm.SharpSnmpLib.Integer64)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><value>true</value> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Integer64.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:Lextm.SharpSnmpLib.Integer64"/>.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Integer64.op_Equality(Lextm.SharpSnmpLib.Integer64,Lextm.SharpSnmpLib.Integer64)">
            <summary>
            The equality operator.
            </summary>
            <param name="lhs">Left <see cref="T:Lextm.SharpSnmpLib.Integer64"/> object</param>
            <param name="rhs">Right <see cref="T:Lextm.SharpSnmpLib.Integer64"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Integer64.op_Inequality(Lextm.SharpSnmpLib.Integer64,Lextm.SharpSnmpLib.Integer64)">
            <summary>
            The inequality operator.
            </summary>
            <param name="lhs">Left <see cref="T:Lextm.SharpSnmpLib.Integer64"/> object</param>
            <param name="rhs">Right <see cref="T:Lextm.SharpSnmpLib.Integer64"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Integer64.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Integer64"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.IP">
            <summary>
            IPAddress type.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.IP.#ctor(System.Net.IPAddress)">
            <summary>
            Creates an <see cref="T:Lextm.SharpSnmpLib.IP"/> with a specific <see cref="T:System.Net.IPAddress"/>.
            </summary>
            <param name="ip">IP address</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.IP.#ctor(System.Byte[])">
            <summary>
            Creates an <see cref="T:Lextm.SharpSnmpLib.IP"/> from raw bytes.
            </summary>
            <param name="raw">Raw bytes</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.IP.#ctor(System.String)">
            <summary>
            Creates an <see cref="T:Lextm.SharpSnmpLib.IP"/> from a specific <see cref="T:System.String"/>.
            </summary>
            <param name="ip">IP string</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.IP.#ctor(System.Int32,System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.IP"/> class.
            </summary>
            <param name="length">The length.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.IP.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.IP"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.IP.ToIPAddress">
            <summary>
            Returns an <see cref="T:System.Net.IPAddress"/> that represents this <see cref="T:Lextm.SharpSnmpLib.IP"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.IP.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.IP.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.IP.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.IP"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:Lextm.SharpSnmpLib.IP"/>. </param>
            <returns><value>true</value> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.IP"/>; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.IP.Equals(Lextm.SharpSnmpLib.IP)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><value>true</value> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.IP.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:Lextm.SharpSnmpLib.IP"/>.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.IP.op_Equality(Lextm.SharpSnmpLib.IP,Lextm.SharpSnmpLib.IP)">
            <summary>
            The equality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.IP"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.IP"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.IP.op_Inequality(Lextm.SharpSnmpLib.IP,Lextm.SharpSnmpLib.IP)">
            <summary>
            The inequality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.IP"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.IP"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.IP.Equals(Lextm.SharpSnmpLib.IP,Lextm.SharpSnmpLib.IP)">
            <summary>
            The comparison.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.IP"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.IP"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.IP.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.ISnmpMessage">
            <summary>
            SNMP message.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ISnmpMessage.ToBytes">
            <summary>
            Converts to the bytes.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.ISnmpMessage.Pdu">
            <summary>
            PDU section.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.ISnmpMessage.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.ISnmpMessage.Scope">
            <summary>
            Gets the scope.
            </summary>
            <value>The scope.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.ISnmpMessage.Version">
            <summary>
            Gets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.Discovery">
            <summary>
            Discovery class that participates in SNMP v3 discovery process.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Discovery.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.Discovery"/> class.
            </summary>
            <param name="requestId">The request id.</param>
            <param name="messageId">The message id.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Discovery.GetResponse(System.Int32,System.Net.IPEndPoint)">
            <summary>
            Gets the response.
            </summary>
            <param name="timeout">The timeout.</param>
            <param name="receiver">The receiver.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage">
            <summary>
            GETBULK request message.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage.#ctor(System.Int32,Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.OctetString,System.Int32,System.Int32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage"/> with all contents.
            </summary>
            <param name="requestId">The request id.</param>
            <param name="version">Protocol version.</param>
            <param name="community">Community name.</param>
            <param name="nonRepeaters">Non-repeaters.</param>
            <param name="maxRepetitions">Max repetitions.</param>
            <param name="variables">Variables.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage.#ctor(Lextm.SharpSnmpLib.VersionCode,System.Int32,System.Int32,Lextm.SharpSnmpLib.OctetString,System.Int32,System.Int32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},Lextm.SharpSnmpLib.Security.ProviderPair,Lextm.SharpSnmpLib.Messaging.ReportMessage)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage"/> with a specific <see cref="T:Lextm.SharpSnmpLib.Sequence"/>.
            </summary>
            <param name="version">The version.</param>
            <param name="messageId">The message id.</param>
            <param name="requestId">The request id.</param>
            <param name="userName">Name of the user.</param>
            <param name="nonRepeaters">The non repeaters.</param>
            <param name="maxRepetitions">The max repetitions.</param>
            <param name="variables">The variables.</param>
            <param name="pair">The pair.</param>
            <param name="report">The report.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage.GetResponse(System.Int32,System.Net.IPEndPoint)">
            <summary>
            Sends this <see cref="T:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage"/> and handles the response from agent.
            </summary>
            <param name="timeout">Timeout.</param>
            <param name="receiver">Port number.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage.GetResponse(System.Int32,System.Net.IPEndPoint,System.Net.Sockets.Socket)">
            <summary>
            Sends this <see cref="T:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage"/> and handles the response from agent.
            </summary>
            <param name="timeout">Timeout.</param>
            <param name="receiver">Agent.</param>
            <param name="udpSocket">The UDP <see cref="T:System.Net.Sockets.Socket"/> to use to send/receive.</param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage.Variables">
            <summary>
            Variables.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage.Pdu">
            <summary>
            PDU.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage.Scope">
            <summary>
            Gets the scope.
            </summary>
            <value>The scope.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage.Version">
            <summary>
            Gets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage">
            <summary>
            GETNEXT request message.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage.#ctor(System.Int32,Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.OctetString,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage"/> with all contents.
            </summary>
            <param name="requestId">The request id.</param>
            <param name="version">Protocol version</param>
            <param name="community">Community name</param>
            <param name="variables">Variables</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage.#ctor(Lextm.SharpSnmpLib.VersionCode,System.Int32,System.Int32,Lextm.SharpSnmpLib.OctetString,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},Lextm.SharpSnmpLib.Security.ProviderPair,Lextm.SharpSnmpLib.Messaging.ReportMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage"/> class.
            </summary>
            <param name="version">The version.</param>
            <param name="messageId">The message id.</param>
            <param name="requestId">The request id.</param>
            <param name="userName">Name of the user.</param>
            <param name="variables">The variables.</param>
            <param name="pair">The pair.</param>
            <param name="report">The report.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage.GetResponse(System.Int32,System.Net.IPEndPoint)">
            <summary>
            Sends this <see cref="T:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage"/> and handles the response from agent.
            </summary>
            <param name="timeout">Timeout.</param>
            <param name="receiver">Port number.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage.GetResponse(System.Int32,System.Net.IPEndPoint,System.Net.Sockets.Socket)">
            <summary>
            Sends this <see cref="T:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage"/> and handles the response from agent.
            </summary>
            <param name="timeout">Timeout.</param>
            <param name="receiver">Agent.</param>
            <param name="udpSocket">The UDP <see cref="T:System.Net.Sockets.Socket"/> to use to send/receive.</param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage.Variables">
            <summary>
            Variables.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage.Pdu">
            <summary>
            PDU.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage.Scope">
            <summary>
            Gets the scope.
            </summary>
            <value>The scope.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage.Version">
            <summary>
            Gets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.GetRequestMessage">
            <summary>
            GET request message.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetRequestMessage.#ctor(System.Int32,Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.OctetString,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.GetRequestMessage"/> with all contents.
            </summary>
            <param name="requestId">The request id.</param>
            <param name="version">Protocol version</param>
            <param name="community">Community name</param>
            <param name="variables">Variables</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetRequestMessage.#ctor(Lextm.SharpSnmpLib.VersionCode,System.Int32,System.Int32,Lextm.SharpSnmpLib.OctetString,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},Lextm.SharpSnmpLib.Security.ProviderPair,Lextm.SharpSnmpLib.Messaging.ReportMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.GetRequestMessage"/> class.
            </summary>
            <param name="version">The version.</param>
            <param name="messageId">The message id.</param>
            <param name="requestId">The request id.</param>
            <param name="userName">Name of the user.</param>
            <param name="variables">The variables.</param>
            <param name="pair">The pair.</param>
            <param name="report">The report.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetRequestMessage.GetResponse(System.Int32,System.Net.IPEndPoint)">
            <summary>
            Sends this <see cref="T:Lextm.SharpSnmpLib.Messaging.GetRequestMessage"/> and handles the response from agent.
            </summary>
            <param name="timeout">Timeout.</param>
            <param name="receiver">Agent.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetRequestMessage.GetResponse(System.Int32,System.Net.IPEndPoint,System.Net.Sockets.Socket)">
            <summary>
            Sends this <see cref="T:Lextm.SharpSnmpLib.Messaging.GetRequestMessage"/> and handles the response from agent.
            </summary>
            <param name="timeout">Timeout.</param>
            <param name="receiver">Agent.</param>
            <param name="udpSocket">The UDP <see cref="T:System.Net.Sockets.Socket"/> to use to send/receive.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetRequestMessage.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetRequestMessage.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Messaging.GetRequestMessage"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetRequestMessage.MessageId">
            <summary>
            Gets the message ID.
            </summary>
            <value>The message ID.</value>
            <remarks>For v3, message ID is different from request ID. For v1 and v2c, they are the same.</remarks>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetRequestMessage.Variables">
            <summary>
            Variables.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetRequestMessage.Version">
            <summary>
            Version.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetRequestMessage.RequestId">
            <summary>
            Request ID.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetRequestMessage.Community">
            <summary>
            Community name.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetRequestMessage.Level">
            <summary>
            Gets the level.
            </summary>
            <value>The level.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetRequestMessage.Pdu">
            <summary>
            PDU.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetRequestMessage.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetRequestMessage.Scope">
            <summary>
            Gets the scope.
            </summary>
            <value>The scope.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.GetResponseMessage">
            <summary>
            GET response message.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetResponseMessage.#ctor(System.Int32,Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ErrorCode,System.Int32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.GetResponseMessage"/> with all contents.
            </summary>
            <param name="requestId">Request ID.</param>
            <param name="version">Protocol version.</param>
            <param name="community">Community name.</param>
            <param name="error">Error code.</param>
            <param name="index">Error index.</param>
            <param name="variables">Variables.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetResponseMessage.#ctor(Lextm.SharpSnmpLib.VersionCode,System.Int32,System.Int32,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ErrorCode,System.Int32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},Lextm.SharpSnmpLib.Security.ProviderPair)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.GetResponseMessage"/> class.
            </summary>
            <param name="version">The version.</param>
            <param name="requestId">The request id.</param>
            <param name="messageId">The message id.</param>
            <param name="userName">Name of the user.</param>
            <param name="error">Error code.</param>
            <param name="index">Error index.</param>
            <param name="variables">The variables.</param>
            <param name="record">The record.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetResponseMessage.Send(System.Net.EndPoint)">
            <summary>
            Sends this <see cref="T:Lextm.SharpSnmpLib.Messaging.GetRequestMessage"/> and handles the response from agent.
            </summary>
            <param name="receiver">The receiver.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetResponseMessage.Send(System.Net.EndPoint,System.Net.Sockets.Socket)">
            <summary>
            Sends this <see cref="T:Lextm.SharpSnmpLib.Messaging.GetRequestMessage"/> and handles the response from agent.
            </summary>
            <param name="receiver">The receiver.</param>
            <param name="socket">The socket.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetResponseMessage.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetResponseMessage.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Messaging.GetResponseMessage"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetResponseMessage.ErrorStatus">
            <summary>
            Error status.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetResponseMessage.ErrorIndex">
            <summary>
            Error index.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetResponseMessage.Version">
            <summary>
            Gets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetResponseMessage.RequestId">
            <summary>
            Request ID.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetResponseMessage.Variables">
            <summary>
            Variables.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetResponseMessage.Pdu">
            <summary>
            PDU.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetResponseMessage.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetResponseMessage.Scope">
            <summary>
            Gets the scope.
            </summary>
            <value>The scope.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.Helper">
            <summary>
            Helper class.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Helper.Authenticate(Lextm.SharpSnmpLib.ISnmpMessage,Lextm.SharpSnmpLib.Security.ProviderPair)">
            <summary>
            Authenticates this message.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Helper.PackMessage(Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.ISnmpData[])">
            <summary>
            Packs the message.
            </summary>
            <param name="version">The protocol version.</param>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Helper.GetSocket(System.Net.EndPoint)">
            <summary>
            Gets the socket.
            </summary>
            <param name="endpoint">The endpoint.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.InformRequestMessage">
            <summary>
            INFORM request message.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.InformRequestMessage.#ctor(System.Int32,Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ObjectIdentifier,System.UInt32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.InformRequestMessage"/> with all contents.
            </summary>
            <param name="requestId">The request id.</param>
            <param name="version">Protocol version.</param>
            <param name="community">Community name.</param>
            <param name="enterprise">Enterprise.</param>
            <param name="time">Time ticks.</param>
            <param name="variables">Variables.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.InformRequestMessage.SendResponse(System.Net.IPEndPoint)">
            <summary>
            Sends the response.
            </summary>
            <param name="receiver">The receiver.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.InformRequestMessage.GetResponse(System.Int32,System.Net.IPEndPoint)">
            <summary>
            Sends this <see cref="T:Lextm.SharpSnmpLib.Messaging.InformRequestMessage"/> and handles the response from receiver (managers or agents).
            </summary>
            <param name="timeout">Timeout.</param>
            <param name="receiver">Receiver.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.InformRequestMessage.GetResponse(System.Int32,System.Net.IPEndPoint,System.Net.Sockets.Socket)">
            <summary>
            Sends this <see cref="T:Lextm.SharpSnmpLib.Messaging.InformRequestMessage"/> and handles the response from receiver (managers or agents).
            </summary>
            <param name="timeout">Timeout.</param>
            <param name="receiver">Receiver.</param>
            <param name="socket">The socket.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.InformRequestMessage.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.InformRequestMessage.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Messaging.InformRequestMessage"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.InformRequestMessage.Variables">
            <summary>
            Variables.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.InformRequestMessage.Version">
            <summary>
            Gets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.InformRequestMessage.Pdu">
            <summary>
            PDU.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.InformRequestMessage.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.InformRequestMessage.Scope">
            <summary>
            Gets the scope.
            </summary>
            <value>The scope.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.MessageFactory">
            <summary>
            Factory that creates <see cref="T:Lextm.SharpSnmpLib.ISnmpMessage"/> instances from byte format.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.MessageFactory.GetResponse(System.Net.IPEndPoint,System.Byte[],System.Int32,System.Int32,Lextm.SharpSnmpLib.Security.UserRegistry,System.Net.Sockets.Socket)">
            <summary>
            Sends an SNMP message and wait for its responses.
            </summary>
            <param name="receiver">The IP address and port of the target to talk to.</param>
            <param name="bytes">The byte array representing the SNMP message.</param>
            <param name="number">The <see cref="P:Lextm.SharpSnmpLib.Messaging.GetResponseMessage.RequestId"/> of the SNMP message.</param>
            <param name="timeout">The timeout above which, if the response is not received, a <see cref="T:Lextm.SharpSnmpLib.Messaging.SharpTimeoutException"/> is thrown.</param>
            <param name="registry">The registry.</param>
            <param name="socket">The UDP <see cref="T:System.Net.Sockets.Socket"/> to use to send/receive.</param>
            <returns>
            The response message (<see cref="T:Lextm.SharpSnmpLib.ISnmpMessage"/>).
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.MessageFactory.ParseMessages(System.String,Lextm.SharpSnmpLib.Security.UserRegistry)">
            <summary>
            Creates <see cref="T:Lextm.SharpSnmpLib.ISnmpMessage"/> instances from a string.
            </summary>
            <param name="bytes">Byte string.</param>
            <param name="registry">The registry.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.MessageFactory.ParseMessages(System.Byte[],System.Int32,System.Int32,Lextm.SharpSnmpLib.Security.UserRegistry)">
            <summary>
            Creates <see cref="T:Lextm.SharpSnmpLib.ISnmpMessage"/> instances from buffer.
            </summary>
            <param name="buffer">Buffer.</param>
            <param name="index">Index.</param>
            <param name="count">Byte count.</param>
            <param name="registry">The registry.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.MessageFactory.ParseMessages(System.Byte[],Lextm.SharpSnmpLib.Security.UserRegistry)">
            <summary>
            Creates <see cref="T:Lextm.SharpSnmpLib.ISnmpMessage"/> instances from buffer.
            </summary>
            <param name="buffer">Buffer.</param>
            <param name="registry">The registry.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.MessageFactory.ParseMessages(System.IO.Stream,Lextm.SharpSnmpLib.Security.UserRegistry)">
            <summary>
            Creates <see cref="T:Lextm.SharpSnmpLib.ISnmpMessage"/> instances from stream.
            </summary>
            <param name="stream">Stream.</param>
            <param name="registry">The registry.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.ReportMessage">
            <summary>
            REPORT message.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ReportMessage.GetResponse(System.Int32,System.Net.IPEndPoint)">
            <summary>
            Sends this <see cref="T:Lextm.SharpSnmpLib.Messaging.ReportMessage"/> and handles the response from agent.
            </summary>
            <param name="timeout">Timeout.</param>
            <param name="receiver">Agent.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ReportMessage.GetResponse(System.Int32,System.Net.IPEndPoint,System.Net.Sockets.Socket)">
            <summary>
            Sends this <see cref="T:Lextm.SharpSnmpLib.Messaging.ReportMessage"/> and handles the response from agent.
            </summary>
            <param name="timeout">Timeout.</param>
            <param name="receiver">Agent.</param>
            <param name="socket">The socket.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ReportMessage.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ReportMessage.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Messaging.ReportMessage"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ReportMessage.Parameters">
            <summary>
            Security parameters.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ReportMessage.Variables">
            <summary>
            Variables.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ReportMessage.Scope">
            <summary>
            Gets the scope.
            </summary>
            <value>The scope.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ReportMessage.Version">
            <summary>
            Gets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ReportMessage.Pdu">
            <summary>
            PDU.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.SetRequestMessage">
            <summary>
            SET request message.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SetRequestMessage.#ctor(System.Int32,Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.OctetString,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.SetRequestMessage"/> with all contents.
            </summary>
            <param name="requestId">The request id.</param>
            <param name="version">Protocol version</param>
            <param name="community">Community name</param>
            <param name="variables">Variables</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SetRequestMessage.#ctor(Lextm.SharpSnmpLib.VersionCode,System.Int32,System.Int32,Lextm.SharpSnmpLib.OctetString,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},Lextm.SharpSnmpLib.Security.ProviderPair,Lextm.SharpSnmpLib.Messaging.ReportMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.SetRequestMessage"/> class.
            </summary>
            <param name="version">The version.</param>
            <param name="messageId">The message id.</param>
            <param name="requestId">The request id.</param>
            <param name="userName">Name of the user.</param>
            <param name="variables">The variables.</param>
            <param name="pair">The pair.</param>
            <param name="report">The report.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SetRequestMessage.GetResponse(System.Int32,System.Net.IPEndPoint)">
            <summary>
            Sends this <see cref="T:Lextm.SharpSnmpLib.Messaging.SetRequestMessage"/> and handles the response from agent.
            </summary>
            <param name="timeout">Timeout.</param>
            <param name="receiver">Agent.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SetRequestMessage.GetResponse(System.Int32,System.Net.IPEndPoint,System.Net.Sockets.Socket)">
            <summary>
            Sends this <see cref="T:Lextm.SharpSnmpLib.Messaging.SetRequestMessage"/> and handles the response from agent.
            </summary>
            <param name="timeout">Timeout.</param>
            <param name="receiver">Agent.</param>
            <param name="udpSocket">The UDP <see cref="T:System.Net.Sockets.Socket"/> to use to send/receive.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SetRequestMessage.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Messaging.SetRequestMessage"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SetRequestMessage.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.SetRequestMessage.Variables">
            <summary>
            Variables.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.SetRequestMessage.Pdu">
            <summary>
            PDU.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.SetRequestMessage.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.SetRequestMessage.Scope">
            <summary>
            Gets the scope.
            </summary>
            <value>The scope.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.SetRequestMessage.Version">
            <summary>
            Gets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.SharpErrorException">
            <summary>
            Error exception of #SNMP. Raised when an error message is received.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.SharpOperationException">
            <summary>
            Operation exception of #SNMP.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.SharpSnmpException">
            <summary>
            Base exception type of #SNMP.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.SharpSnmpException.#ctor">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.SharpSnmpException"/>.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.SharpSnmpException.#ctor(System.String)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.SharpSnmpException"/> instance with a specific <see cref="T:System.String"/>.
            </summary>
            <param name="message">Message</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.SharpSnmpException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.SharpSnmpException"/> instance with a specific <see cref="T:System.String"/> and an <see cref="T:System.Exception"/>.
            </summary>
            <param name="message">Message</param>
            <param name="inner">Inner exception</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.SharpSnmpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.SharpSnmpException"/> instance.
            </summary>
            <param name="info">Info</param>
            <param name="context">Context</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.SharpSnmpException.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.SharpSnmpException"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.SharpSnmpException.Details">
            <summary>
            Details on operation.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SharpOperationException.agentAddress">
            <summary>
            Agent address.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.SharpOperationException.#ctor">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.SharpOperationException"/> instance.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.SharpOperationException.#ctor(System.String)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.SharpOperationException"/> instance with a specific <see cref="T:System.String"/>.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.SharpOperationException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.SharpOperationException"/> instance with a specific <see cref="T:System.String"/> and an <see cref="T:System.Exception"/>.
            </summary>
            <param name="message"></param>
            <param name="inner"></param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.SharpOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.SharpOperationException"/>
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.SharpOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets object data.
            </summary>
            <param name="info">Info</param>
            <param name="context">Context</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.SharpOperationException.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.SharpOperationException"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.SharpOperationException.Create(System.String,System.Net.IPAddress)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.SharpOperationException"/> with a specific <see cref="T:System.Net.IPAddress"/>.
            </summary>
            <param name="message">Message</param>
            <param name="agent">Agent address</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.SharpOperationException.Agent">
            <summary>
            Agent address.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.SharpOperationException.Details">
            <summary>
            Details on operation.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SharpErrorException.#ctor">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.SharpErrorException"/> instance.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SharpErrorException.#ctor(System.String)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.SharpErrorException"/> instance with a specific <see cref="T:System.String"/>.
            </summary>
            <param name="message">Message</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SharpErrorException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.SharpErrorException"/> instance with a specific <see cref="T:System.String"/> and an <see cref="T:System.Exception"/>.
            </summary>
            <param name="message">Message</param>
            <param name="inner">Inner exception</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SharpErrorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets object data.
            </summary>
            <param name="info">Info</param>
            <param name="context">Context</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SharpErrorException.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Messaging.SharpErrorException"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SharpErrorException.Create(System.String,System.Net.IPAddress,Lextm.SharpSnmpLib.ISnmpMessage)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.SharpErrorException"/>.
            </summary>
            <param name="message">Message.</param>
            <param name="agent">Agent address.</param>
            <param name="body">Error message body.</param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.SharpErrorException.Body">
            <summary>
            Message body.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.SharpErrorException.Details">
            <summary>
            Details on error.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.SharpTimeoutException">
            <summary>
            Timeout exception type of #SNMP.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SharpTimeoutException.#ctor">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.SharpTimeoutException"/> instance.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SharpTimeoutException.#ctor(System.String)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.SharpTimeoutException"/> instance with a specific <see cref="T:System.String"/>.
            </summary>
            <param name="message">Message</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SharpTimeoutException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.SharpTimeoutException"/> instance with a specific <see cref="T:System.String"/> and an <see cref="T:System.Exception"/> instance.
            </summary>
            <param name="message">Message</param>
            <param name="inner">Inner exception</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SharpTimeoutException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets object data.
            </summary>
            <param name="info">Info</param>
            <param name="context">Context</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SharpTimeoutException.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Messaging.SharpTimeoutException"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SharpTimeoutException.Create(System.Net.IPAddress,System.Int32)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.SharpTimeoutException"/>.
            </summary>
            <param name="agent">Agent address</param>
            <param name="timeout">Timeout</param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.SharpTimeoutException.Timeout">
            <summary>
            Timeout.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.TrapV1Message">
            <summary>
            Trap message.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.TrapV1Message.#ctor(Lextm.SharpSnmpLib.VersionCode,System.Net.IPAddress,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ObjectIdentifier,Lextm.SharpSnmpLib.GenericCode,System.Int32,System.UInt32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.TrapV1Message"/> with all content.
            </summary>
            <param name="version">Protocol version</param>
            <param name="agent">Agent address</param>
            <param name="community">Community name</param>
            <param name="enterprise">Enterprise</param>
            <param name="generic">Generic</param>
            <param name="specific">Specific</param>
            <param name="time">Time</param>
            <param name="variables">Variables</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.TrapV1Message.#ctor(Lextm.SharpSnmpLib.Sequence)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.TrapV1Message"/> instance with a message body.
            </summary>
            <param name="body">Message body</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.TrapV1Message.Send(System.Net.EndPoint)">
            <summary>
            Sends this <see cref="T:Lextm.SharpSnmpLib.Messaging.TrapV1Message"/>.
            </summary>
            <param name="manager">Manager</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.TrapV1Message.Send(System.Net.EndPoint,System.Net.Sockets.Socket)">
            <summary>
            Sends this <see cref="T:Lextm.SharpSnmpLib.Messaging.TrapV1Message"/>.
            </summary>
            <param name="manager">Manager</param>
            <param name="socket">The socket.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.TrapV1Message.ToBytes">
            <summary>
            To byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.TrapV1Message.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Lextm.SharpSnmpLib.Messaging.TrapV1Message"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV1Message.TimeStamp">
            <summary>
            Time stamp.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV1Message.Community">
            <summary>
            Community name.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV1Message.Enterprise">
            <summary>
            Enterprise.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV1Message.AgentAddress">
            <summary>
            Agent address.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV1Message.Generic">
            <summary>
            Generic type.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV1Message.Specific">
            <summary>
            Specific type.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV1Message.Variables">
            <summary>
            Variable binds.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV1Message.Version">
            <summary>
            Protocol version.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV1Message.Pdu">
            <summary>
            PDU.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV1Message.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>The parameters.</value>
            <remarks><see cref="T:Lextm.SharpSnmpLib.Messaging.TrapV1Message"/> returns null here.</remarks>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV1Message.Scope">
            <summary>
            Gets the scope.
            </summary>
            <value>The scope.</value>
            <remarks><see cref="T:Lextm.SharpSnmpLib.Messaging.TrapV1Message"/> returns null here.</remarks>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.TrapV2Message">
            <summary>
            TRAP v2 message.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.TrapV2Message.#ctor(System.Int32,Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ObjectIdentifier,System.UInt32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.TrapV2Message"/> instance with all content.
            </summary>
            <param name="version">Version code.</param>
            <param name="community">Community.</param>
            <param name="enterprise">Enterprise.</param>
            <param name="time">Time stamp.</param>
            <param name="variables">Variables.</param>
            <param name="requestId">Request ID.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.TrapV2Message.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.TrapV2Message.Send(System.Net.EndPoint)">
            <summary>
            Sends this <see cref="T:Lextm.SharpSnmpLib.Messaging.TrapV2Message"/>.
            </summary>
            <param name="manager">Manager.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.TrapV2Message.Send(System.Net.EndPoint,System.Net.Sockets.Socket)">
            <summary>
            Sends this <see cref="T:Lextm.SharpSnmpLib.Messaging.TrapV2Message"/>.
            </summary>
            <param name="manager">Manager.</param>
            <param name="socket">The socket.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.TrapV2Message.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Lextm.SharpSnmpLib.Messaging.TrapV2Message"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV2Message.Pdu">
            <summary>
            PDU.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV2Message.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV2Message.Scope">
            <summary>
            Gets the scope.
            </summary>
            <value>The scope.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV2Message.Community">
            <summary>
            Community name.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV2Message.Enterprise">
            <summary>
            Enterprise.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV2Message.TimeStamp">
            <summary>
            Time stamp.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV2Message.Variables">
            <summary>
            Variables.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV2Message.Version">
            <summary>
            Gets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Mib.DefinitionType">
            <summary>
            Definition type.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.Mib.DefinitionType.Unknown">
            <summary>
            Unknown type.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.Mib.DefinitionType.OidValueAssignment">
            <summary>
            OID value assignment.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.Mib.DefinitionType.Scalar">
            <summary>
            Scalar OID.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.Mib.DefinitionType.Table">
            <summary>
            Table OID.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.Mib.DefinitionType.Entry">
            <summary>
            Table entry OID.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.Mib.DefinitionType.Column">
            <summary>
            Table column OID.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Mib.IConstruct">
            <summary>
            Construct interface.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Mib.IDefinition">
            <summary>
            Definition interface.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Mib.IEntity">
            <summary>
            Entity interface.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Mib.IEntity.ModuleName">
            <summary>
            Module name.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Mib.IEntity.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Mib.IEntity.Parent">
            <summary>
            Parent name.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Mib.IEntity.Value">
            <summary>
            Value.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Mib.IDefinition.GetChildAt(System.UInt32)">
            <summary>
            Indexer.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Mib.IDefinition.GetNumericalForm">
            <summary>
            Gets the numerical form.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Mib.IDefinition.Children">
            <summary>
            Children definitions.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Mib.IDefinition.TextualForm">
            <summary>
            Returns the textual form.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Mib.IDefinition.ParentDefinition">
            <summary>
            Parent definition.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Mib.IDefinition.Type">
            <summary>
            Type.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Mib.IModule">
            <summary>
            MIB Module interface.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Mib.IModule.Name">
            <summary>
            Module name.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Mib.IModule.Objects">
            <summary>
            Objects.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Mib.IModule.Entities">
            <summary>
            Entities.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Mib.IModule.Dependents">
            <summary>
            Modules that this module dependent on.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Mib.IObjectRegistry">
            <summary>
            Object registry interface.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Mib.IObjectRegistry.CreateVariable(System.String)">
            <summary>
            Creates a variable.
            </summary>
            <param name="textual">The textual ID.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Mib.IObjectRegistry.CreateVariable(System.String,Lextm.SharpSnmpLib.ISnmpData)">
            <summary>
            Creates a variable.
            </summary>
            <param name="textual">The textual ID.</param>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Mib.IObjectRegistry.Translate(System.String)">
            <summary>
            Gets numercial form from textual form.
            </summary>
            <param name="textual">Textual</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Mib.IObjectRegistry.Translate(System.String,System.String)">
            <summary>
            Gets numerical form from textual form.
            </summary>
            <param name="moduleName">Module name.</param>
            <param name="name">Object name.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Mib.IObjectRegistry.Translate(System.UInt32[])">
            <summary>
            Gets textual form from numerical form.
            </summary>
            <param name="numerical">Numerical form</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Mib.IObjectRegistry.CompileFolder(System.String,System.String)">
            <summary>
            Loads a folder of MIB files.
            </summary>
            <param name="folder">Folder</param>
            <param name="pattern">MIB file pattern</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Mib.IObjectRegistry.CompileFiles(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Loads MIB files.
            </summary>
            <param name="fileNames">File names.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Mib.IObjectRegistry.Compile(System.String)">
            <summary>
            Loads a MIB file.
            </summary>
            <param name="fileName">File name</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Mib.IObjectRegistry.ValidateTable(Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            Validates the table.
            </summary>
            <param name="identifier">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Mib.IObjectRegistry.Refresh">
            <summary>
            Refreshes this instance.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Mib.IObjectRegistry.Import(System.Collections.Generic.IEnumerable{Lextm.SharpSnmpLib.Mib.IModule})">
            <summary>
            Imports the specified modules.
            </summary>
            <param name="modules">The modules.</param>
        </member>
        <member name="E:Lextm.SharpSnmpLib.Mib.IObjectRegistry.OnChanged">
            <summary>
            This event occurs when new documents are loaded.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Mib.IObjectRegistry.Tree">
            <summary>
            Object tree.
            </summary>        
        </member>
        <member name="T:Lextm.SharpSnmpLib.Mib.IObjectTree">
            <summary>
            Object tree interface.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Mib.IObjectTree.Find(System.String,System.String)">
            <summary>
            Finds an <see cref="T:Lextm.SharpSnmpLib.Mib.IDefinition"/>.
            </summary>
            <param name="moduleName"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Mib.IObjectTree.Remove(System.String)">
            <summary>
            Removes a module.
            </summary>
            <param name="moduleName"></param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Mib.IObjectTree.Find(System.UInt32[])">
            <summary>
            Finds the specified numerical.
            </summary>
            <param name="numerical">The numerical.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Mib.IObjectTree.Import(System.Collections.Generic.IEnumerable{Lextm.SharpSnmpLib.Mib.IModule})">
            <summary>
            Imports the specified enumerable.
            </summary>
            <param name="modules">The modules.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Mib.IObjectTree.Refresh">
            <summary>
            Refreshes this instance.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Mib.IObjectTree.Root">
            <summary>
            Root definition.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Mib.IObjectTree.LoadedModules">
            <summary>
            Loaded MIB modules.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Mib.IObjectTree.PendingModules">
            <summary>
            Pending MIB modules.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.NoSuchInstance">
            <summary>
            NoSuchInstance exception.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.NoSuchInstance.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.NoSuchInstance"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:Lextm.SharpSnmpLib.NoSuchInstance"/>. </param>
            <returns><value>true</value> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.NoSuchInstance"/>; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.NoSuchInstance.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:Lextm.SharpSnmpLib.NoSuchInstance"/>.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.NoSuchInstance.Equals(Lextm.SharpSnmpLib.NoSuchInstance)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><value>true</value> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.NoSuchInstance.op_Equality(Lextm.SharpSnmpLib.NoSuchInstance,Lextm.SharpSnmpLib.NoSuchInstance)">
            <summary>
            The equality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.NoSuchInstance"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.NoSuchInstance"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.NoSuchInstance.op_Inequality(Lextm.SharpSnmpLib.NoSuchInstance,Lextm.SharpSnmpLib.NoSuchInstance)">
            <summary>
            The inequality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.NoSuchInstance"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.NoSuchInstance"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.NoSuchInstance.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.NoSuchInstance.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.NoSuchInstance.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.NoSuchInstance"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.NoSuchInstance.Equals(Lextm.SharpSnmpLib.NoSuchInstance,Lextm.SharpSnmpLib.NoSuchInstance)">
            <summary>
            The comparison.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.NoSuchInstance"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.NoSuchInstance"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.NoSuchInstance.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.NoSuchObject">
            <summary>
            NoSuchObject exception.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.NoSuchObject.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.NoSuchObject"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:Lextm.SharpSnmpLib.NoSuchObject"/>. </param>
            <returns><value>true</value> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.NoSuchObject"/>; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.NoSuchObject.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:Lextm.SharpSnmpLib.NoSuchObject"/>.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.NoSuchObject.Equals(Lextm.SharpSnmpLib.NoSuchObject)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><value>true</value> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.NoSuchObject.op_Equality(Lextm.SharpSnmpLib.NoSuchObject,Lextm.SharpSnmpLib.NoSuchObject)">
            <summary>
            The equality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.NoSuchObject"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.NoSuchObject"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.NoSuchObject.op_Inequality(Lextm.SharpSnmpLib.NoSuchObject,Lextm.SharpSnmpLib.NoSuchObject)">
            <summary>
            The inequality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.NoSuchObject"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.NoSuchObject"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.NoSuchObject.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.NoSuchObject.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.NoSuchObject.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.NoSuchObject"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.NoSuchObject.Equals(Lextm.SharpSnmpLib.NoSuchObject,Lextm.SharpSnmpLib.NoSuchObject)">
            <summary>
            The comparison.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.NoSuchObject"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.NoSuchObject"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.NoSuchObject.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Null">
            <summary>
            Null type.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Null.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Null.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Null.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.Null"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:Lextm.SharpSnmpLib.Null"/>. </param>
            <returns><value>true</value> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.Null"/>; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Null.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:Lextm.SharpSnmpLib.Null"/>.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Null.Equals(Lextm.SharpSnmpLib.Null)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><value>true</value> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Null.op_Equality(Lextm.SharpSnmpLib.Null,Lextm.SharpSnmpLib.Null)">
            <summary>
            The equality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Null"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Null"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Null.op_Inequality(Lextm.SharpSnmpLib.Null,Lextm.SharpSnmpLib.Null)">
            <summary>
            The inequality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Null"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Null"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Null.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Null"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Null.Equals(Lextm.SharpSnmpLib.Null,Lextm.SharpSnmpLib.Null)">
            <summary>
            The comparison.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Null"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Null"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Null.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.ObjectIdentifier">
            <summary>
            ObjectIdentifier type.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifier.#ctor(System.String)">
            <summary>
            Creates an <see cref="T:Lextm.SharpSnmpLib.ObjectIdentifier"/> instance from textual ID.
            </summary>
            <param name="text">String in this format, "*.*.*.*".</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifier.#ctor(System.UInt32[])">
            <summary>
            Creates an <see cref="T:Lextm.SharpSnmpLib.ObjectIdentifier"/> instance from numerical ID.
            </summary>
            <param name="id">OID <see cref="T:System.UInt32"/> array</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifier.#ctor(System.Byte[])">
            <summary>
            Creates an <see cref="T:Lextm.SharpSnmpLib.ObjectIdentifier"/> instance from raw bytes.
            </summary>
            <param name="raw">Raw bytes</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifier.#ctor(System.Int32,System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.ObjectIdentifier"/> class.
            </summary>
            <param name="length">The length.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifier.ToNumerical">
            <summary>
            Convers to numerical ID.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifier.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.ObjectIdentifier"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifier.Convert(System.UInt32[])">
            <summary>
            Converts uint array to dotted <see cref="T:System.String"/>.
            </summary>
            <param name="numerical"></param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifier.Convert(System.String)">
            <summary>
            Converts dotted <see cref="T:System.String"/> to uint array.
            </summary>
            <param name="dotted">Dotted string.</param>
            <returns>uint array.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifier.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifier.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifier.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.ObjectIdentifier"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:Lextm.SharpSnmpLib.ObjectIdentifier"/>. </param>
            <returns><value>true</value> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.ObjectIdentifier"/>; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifier.Equals(Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><value>true</value> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifier.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:Lextm.SharpSnmpLib.ObjectIdentifier"/>.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifier.op_Equality(Lextm.SharpSnmpLib.ObjectIdentifier,Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            The equality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.ObjectIdentifier"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.ObjectIdentifier"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifier.op_Inequality(Lextm.SharpSnmpLib.ObjectIdentifier,Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            The inequality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.ObjectIdentifier"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.ObjectIdentifier"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifier.Equals(Lextm.SharpSnmpLib.ObjectIdentifier,Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            The comparison.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.ObjectIdentifier"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.ObjectIdentifier"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.ObjectIdentifier.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.ObjectIdentifierConverter">
            <summary>
            The <see cref="T:System.ComponentModel.TypeConverter"/> dedicated for the <see cref="T:Lextm.SharpSnmpLib.ObjectIdentifier"/> class.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifierConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter.
            </summary>
            <param name="context"></param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifierConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type.
            </summary>
            <param name="context"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifierConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifierConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the arguments.
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.OctetString">
            <summary>
            OctetString type.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OctetString.#ctor(System.Byte[])">
            <summary>
            Creates an <see cref="T:Lextm.SharpSnmpLib.OctetString"/> from raw bytes.
            </summary>
            <param name="raw">Raw bytes</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OctetString.#ctor(System.String,System.Text.Encoding)">
            <summary>
            Creates an <see cref="T:Lextm.SharpSnmpLib.OctetString"/> with a specific <see cref="T:System.String"/>. This string is treated in specific <see cref="P:Lextm.SharpSnmpLib.OctetString.Encoding"/>.
            </summary>
            <param name="content">String.</param>
            <param name="encoding">Encoding.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OctetString.#ctor(System.String)">
            <summary>
            Creates an <see cref="T:Lextm.SharpSnmpLib.OctetString"/> with a specific <see cref="T:System.String"/>. This string is treated as UTF-16.
            </summary>
            <param name="content">String.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OctetString.ToHexString">
            <summary>
            Returns a <see cref="T:System.String"/> in a hex form that represents this <see cref="T:Lextm.SharpSnmpLib.OctetString"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OctetString.ToString(System.Text.Encoding)">
            <summary>
            Returns a <see cref="T:System.String"/> in a specific <see cref="P:Lextm.SharpSnmpLib.OctetString.Encoding"/> that represents this <see cref="T:Lextm.SharpSnmpLib.OctetString"/>.
            </summary>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OctetString.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> in UTF-16 that represents this <see cref="T:Lextm.SharpSnmpLib.OctetString"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OctetString.ToDateString">
            <summary>
            Converts octets to data string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OctetString.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OctetString.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OctetString.Equals(Lextm.SharpSnmpLib.OctetString)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><value>true</value> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OctetString.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.OctetString"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:Lextm.SharpSnmpLib.OctetString"/>. </param>
            <returns><value>true</value> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.OctetString"/>; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OctetString.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:Lextm.SharpSnmpLib.OctetString"/>.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OctetString.op_Equality(Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.OctetString)">
            <summary>
            The equality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.OctetString"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.OctetString"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OctetString.op_Inequality(Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.OctetString)">
            <summary>
            The inequality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.OctetString"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.OctetString"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OctetString.ToPhysicalAddress">
            <summary>
            Converts octets to physical address.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OctetString.#ctor(System.Int32,System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.OctetString"/> class.
            </summary>
            <param name="length">The length.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OctetString.Equals(Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.OctetString)">
            <summary>
            The comparison.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.OctetString"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.OctetString"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.OctetString.Encoding">
            <summary>
            Encoding of this <see cref="T:Lextm.SharpSnmpLib.OctetString"/>
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.OctetString.Empty">
            <summary>
            Gets the empty string.
            </summary>
            <value>The empty.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.OctetString.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.OctetString.DefaultEncoding">
            <summary>
            Default encoding of <see cref="T:Lextm.SharpSnmpLib.OctetString"/> type.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Integer32">
            <summary>
            Integer32 type in SMIv2 (or INTEGER in SMIv1).
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Integer32.#ctor(System.Byte[])">
            <summary>
            Creates an <see cref="T:Lextm.SharpSnmpLib.Integer32"/> instance.
            </summary>
            <param name="raw">Raw bytes</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Integer32.#ctor(System.Int32)">
            <summary>
            Creates an <see cref="T:Lextm.SharpSnmpLib.Integer32"/> instance with a specific <see cref="T:System.Int32"/>.
            </summary>
            <param name="value">Value</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Integer32.#ctor(System.Int32,System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Integer32"/> class.
            </summary>
            <param name="length">The length.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Integer32.ToInt32">
            <summary>
            Returns an <see cref="T:System.Int32"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Integer32"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Integer32.ToErrorCode">
            <summary>
            Converts to <see cref="T:Lextm.SharpSnmpLib.ErrorCode"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Integer32.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Integer32"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Integer32.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Integer32.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Integer32.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:Lextm.SharpSnmpLib.Integer32"/>.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Integer32.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.Integer32"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:Lextm.SharpSnmpLib.Integer32"/>. </param>
            <returns><value>true</value> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.Integer32"/>; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Integer32.Equals(Lextm.SharpSnmpLib.Integer32)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><value>true</value> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Integer32.op_Equality(Lextm.SharpSnmpLib.Integer32,Lextm.SharpSnmpLib.Integer32)">
            <summary>
            The equality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Integer32"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Integer32"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Integer32.op_Inequality(Lextm.SharpSnmpLib.Integer32,Lextm.SharpSnmpLib.Integer32)">
            <summary>
            The inequality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Integer32"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Integer32"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Integer32.Equals(Lextm.SharpSnmpLib.Integer32,Lextm.SharpSnmpLib.Integer32)">
            <summary>
            The comparison.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Integer32"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Integer32"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Integer32.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Opaque">
            <summary>
            Opaque type.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Opaque.#ctor(System.Byte[])">
            <summary>
            Creates an <see cref="T:Lextm.SharpSnmpLib.Opaque"/> from raw bytes.
            </summary>
            <param name="raw">Raw bytes</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Opaque.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Opaque"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Opaque.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Opaque.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Opaque.Equals(Lextm.SharpSnmpLib.Opaque)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><value>true</value> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Opaque.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.Opaque"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:Lextm.SharpSnmpLib.Opaque"/>. </param>
            <returns><value>true</value> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.Opaque"/>; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Opaque.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:Lextm.SharpSnmpLib.Opaque"/>.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Opaque.op_Equality(Lextm.SharpSnmpLib.Opaque,Lextm.SharpSnmpLib.Opaque)">
            <summary>
            The equality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Opaque"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Opaque"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Opaque.op_Inequality(Lextm.SharpSnmpLib.Opaque,Lextm.SharpSnmpLib.Opaque)">
            <summary>
            The inequality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Opaque"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Opaque"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Opaque.Equals(Lextm.SharpSnmpLib.Opaque,Lextm.SharpSnmpLib.Opaque)">
            <summary>
            The comparison.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Opaque"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Opaque"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Opaque.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Real">
            <summary>
            Real type.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Real.#ctor(System.Byte[])">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Real"/> from raw bytes (these bytes are cloned).
            </summary>
            <param name="raw">Raw bytes</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Real.#ctor(System.Byte[],System.Boolean)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Real"/> from raw bytes.
            </summary>
            <param name="raw">Raw bytes</param>
            <param name="cloning">true to clone the raw bytes, false to use them directly.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Real.#ctor(System.Double)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Real"/> with a specific <see cref="T:System.Double"/>.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Real.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Real"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Real.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Real.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Real.Equals(Lextm.SharpSnmpLib.Real)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><value>true</value> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Real.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.Real"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:Lextm.SharpSnmpLib.Real"/>. </param>
            <returns><value>true</value> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.Real"/>; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Real.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:Lextm.SharpSnmpLib.Real"/>.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Real.op_Equality(Lextm.SharpSnmpLib.Real,Lextm.SharpSnmpLib.Real)">
            <summary>
            The equality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Real"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Real"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Real.op_Inequality(Lextm.SharpSnmpLib.Real,Lextm.SharpSnmpLib.Real)">
            <summary>
            The inequality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Real"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Real"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Real.Equals(Lextm.SharpSnmpLib.Real,Lextm.SharpSnmpLib.Real)">
            <summary>
            The comparison.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Real"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Real"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Real.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.ReportPdu">
            <summary>
            Report PDU.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ReportPdu.#ctor(System.Int32,Lextm.SharpSnmpLib.ErrorCode,System.Int32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.ReportPdu"/> with all contents.
            </summary>
            <param name="requestId">The request id.</param>
            <param name="errorStatus">Error status</param>
            <param name="errorIndex">Error index</param>
            <param name="variables">Variables</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ReportPdu.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.ReportPdu"/> class.
            </summary>        
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ReportPdu.ToMessageBody(Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.OctetString)">
            <summary>
            Converts to message body.
            </summary>
            <param name="version">Protocol version</param>
            <param name="community">Community name</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ReportPdu.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ReportPdu.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ReportPdu.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.ReportPdu"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.ReportPdu.RequestId">
            <summary>
            Gets the request ID.
            </summary>
            <value>The request ID.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.ReportPdu.ErrorStatus">
            <summary>
            Gets the error status.
            </summary>
            <value>The error status.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.ReportPdu.ErrorIndex">
            <summary>
            Gets the index of the error.
            </summary>
            <value>The index of the error.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.ReportPdu.Variables">
            <summary>
            Variables.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.ReportPdu.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Scope">
            <summary>
            Scope segment.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Scope.#ctor(Lextm.SharpSnmpLib.Sequence)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Scope"/> class.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Scope.#ctor(Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ISnmpPdu)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Scope"/> class.
            </summary>
            <param name="contextEngineId">The context engine ID.</param>
            <param name="contextName">Name of the context.</param>
            <param name="pdu">The PDU.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Scope.#ctor(Lextm.SharpSnmpLib.ISnmpPdu)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Scope"/> class.
            </summary>
            <param name="pdu">The pdu.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Scope.GetData(Lextm.SharpSnmpLib.VersionCode)">
            <summary>
            Gets the data.
            </summary>
            <param name="version">The version.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Scope.ToSequence">
            <summary>
            Converts to <see cref="T:Lextm.SharpSnmpLib.Sequence"/> object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Scope.Pdu">
            <summary>
            Gets the PDU.
            </summary>
            <value>The PDU.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Scope.ContextName">
            <summary>
            Gets or sets the name of the context.
            </summary>
            <value>The name of the context.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Scope.ContextEngineId">
            <summary>
            Gets or sets the context engine id.
            </summary>
            <value>The context engine id.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.SecurityParameters">
            <summary>
            Description of SecurityParameters.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.SecurityParameters.#ctor(Lextm.SharpSnmpLib.OctetString)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.SecurityParameters"/> class.
            </summary>
            <param name="parameters">The <see cref="T:Lextm.SharpSnmpLib.OctetString"/> that contains parameters.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.SecurityParameters.#ctor(Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.Integer32,Lextm.SharpSnmpLib.Integer32,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.OctetString)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.SecurityParameters"/> class.
            </summary>
            <param name="engineId">The engine ID.</param>
            <param name="engineBoots">The engine boots.</param>
            <param name="engineTime">The engine time.</param>
            <param name="userName">The user name.</param>
            <param name="authenticationParameters">The authentication parameters.</param>
            <param name="privacyParameters">The privacy parameters.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.SecurityParameters.ToSequence">
            <summary>
            Converts to <see cref="T:Lextm.SharpSnmpLib.Sequence"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.SecurityParameters.GetData(Lextm.SharpSnmpLib.VersionCode)">
            <summary>
            Gets the data.
            </summary>
            <param name="version">The version.</param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.SecurityParameters.EngineId">
            <summary>
            Gets the engine ID.
            </summary>
            <value>The engine ID.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.SecurityParameters.EngineBoots">
            <summary>
            Gets the boot count.
            </summary>
            <value>The boot count.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.SecurityParameters.EngineTime">
            <summary>
            Gets the engine time.
            </summary>
            <value>The engine time.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.SecurityParameters.UserName">
            <summary>
            Gets the user name.
            </summary>
            <value>The user name.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.SecurityParameters.AuthenticationParameters">
            <summary>
            Gets the authentication parameters.
            </summary>
            <value>The authentication parameters.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.SecurityParameters.PrivacyParameters">
            <summary>
            Gets the privacy parameters.
            </summary>
            <value>The privacy parameters.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Security.DefaultAuthenticationProvider">
            <summary>
            Default authentication provider.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Security.IAuthenticationProvider">
            <summary>
            Authentication provider interface.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.IAuthenticationProvider.ComputeHash(Lextm.SharpSnmpLib.ISnmpMessage)">
            <summary>
            Computes the hash.
            </summary>
            <param name="message">The message.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.IAuthenticationProvider.PasswordToKey(System.Byte[],System.Byte[])">
            <summary>
            Converts password to key.
            </summary>
            <param name="password">The password.</param>
            <param name="engineId">The engine id.</param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.IAuthenticationProvider.CleanDigest">
            <summary>
            Gets the clean digest.
            </summary>
            <value>The clean digest.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DefaultAuthenticationProvider.ComputeHash(Lextm.SharpSnmpLib.ISnmpMessage)">
            <summary>
            Computes the hash.
            </summary>
            <param name="message">The message.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DefaultAuthenticationProvider.PasswordToKey(System.Byte[],System.Byte[])">
            <summary>
            Converts password to key.
            </summary>
            <param name="password"></param>
            <param name="engineId"></param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.DefaultAuthenticationProvider.Instance">
            <summary>
            Gets the instance.
            </summary>
            <value>The instance.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.DefaultAuthenticationProvider.CleanDigest">
            <summary>
            Gets the clean digest.
            </summary>
            <value>The clean digest.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Security.DefaultPrivacyProvider">
            <summary>
            Default privacy provider.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Security.IPrivacyProvider">
            <summary>
            Privacy provider interface.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.IPrivacyProvider.Encrypt(Lextm.SharpSnmpLib.ISnmpData,Lextm.SharpSnmpLib.SecurityParameters)">
            <summary>
            Encrypts the specified scope.
            </summary>
            <param name="data">The scope data.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.IPrivacyProvider.Decrypt(Lextm.SharpSnmpLib.ISnmpData,Lextm.SharpSnmpLib.SecurityParameters)">
            <summary>
            Decrypts the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.IPrivacyProvider.Salt">
            <summary>
            Gets the salt.
            </summary>
            <value>The salt.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DefaultPrivacyProvider.Decrypt(Lextm.SharpSnmpLib.ISnmpData,Lextm.SharpSnmpLib.SecurityParameters)">
            <summary>
            Decrypts the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DefaultPrivacyProvider.Encrypt(Lextm.SharpSnmpLib.ISnmpData,Lextm.SharpSnmpLib.SecurityParameters)">
            <summary>
            Encrypts the specified scope.
            </summary>
            <param name="data">The scope data.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.DefaultPrivacyProvider.Instance">
            <summary>
            Gets the instance.
            </summary>
            <value>The instance.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.DefaultPrivacyProvider.Salt">
            <summary>
            Gets the salt.
            </summary>
            <value>The salt.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Security.DESPrivacyProvider">
            <summary>
            Privacy provider for DES.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.#ctor(Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.Security.IAuthenticationProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Security.DESPrivacyProvider"/> class.
            </summary>
            <param name="phrase">The phrase.</param>
            <param name="auth">The auth.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.Encrypt(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Encrypt ScopedPdu using DES encryption protocol
            </summary>
            <param name="unencryptedData">Unencrypted ScopedPdu byte array</param>
            <param name="key">Encryption key. Key has to be at least 32 bytes is length</param>
            <param name="privacyParameters">Privacy parameters out buffer. This field will be filled in with information
            required to decrypt the information. Output length of this field is 8 bytes and space has to be reserved
            in the USM header to store this information</param>
            <returns>Encrypted byte array</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when encryption key is null or length of the encryption key is too short.</exception>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.Decrypt(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Decrypt DES encrypted ScopedPdu
            </summary>
            <param name="encryptedData">Source data buffer</param>
            <param name="key">Decryption key. Key length has to be 32 bytes in length or longer (bytes beyond 32 bytes are ignored).</param>
            <param name="privacyParameters">Privacy parameters extracted from USM header</param>
            <returns>Decrypted byte array</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when encrypted data is null or length == 0</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when encryption key length is less then 32 byte or if privacy parameters
            argument is null or length other then 8 bytes</exception>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.GetIV(System.Byte[],System.Byte[])">
            <summary>
            Generate IV from the privacy key and salt value returned by GetSalt method.
            </summary>
            <param name="privacyKey">16 byte privacy key</param>
            <param name="salt">Salt value returned by GetSalt method</param>
            <returns>IV value used in the encryption process</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.GetKey(System.Byte[])">
            <summary>
            Extract and return DES encryption key.
            Privacy password is 16 bytes in length. Only the first 8 bytes are used as DES password. Remaining
            8 bytes are used as pre-IV value.
            </summary>
            <param name="privacyPassword">16 byte privacy password</param>
            <returns>8 byte DES encryption password</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.Decrypt(Lextm.SharpSnmpLib.ISnmpData,Lextm.SharpSnmpLib.SecurityParameters)">
            <summary>
            Decrypts the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.Encrypt(Lextm.SharpSnmpLib.ISnmpData,Lextm.SharpSnmpLib.SecurityParameters)">
            <summary>
            Encrypts the specified scope.
            </summary>
            <param name="data">The scope data.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.PrivacyParametersLength">
            <summary>
            Returns the length of privacyParameters USM header field. For DES, field length is 8.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.MinimumKeyLength">
            <summary>
            Returns minimum encryption/decryption key length. For DES, returned value is 16.
            
            DES protocol itself requires an 8 byte key. Additional 8 bytes are used for generating the
            encryption IV. For encryption itself, first 8 bytes of the key are used.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.MaximumKeyLength">
            <summary>
            Return maximum encryption/decryption key length. For DES, returned value is 16
            
            DES protocol itself requires an 8 byte key. Additional 8 bytes are used for generating the
            encryption IV. For encryption itself, first 8 bytes of the key are used.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.Salt">
            <summary>
            Gets the salt.
            </summary>
            <value>The salt.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Security.MD5AuthenticationProvider">
            <summary>
            Authentication provider using MD5.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.MD5AuthenticationProvider.#ctor(Lextm.SharpSnmpLib.OctetString)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Security.MD5AuthenticationProvider"/> class.
            </summary>
            <param name="phrase">The phrase.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.MD5AuthenticationProvider.PasswordToKey(System.Byte[],System.Byte[])">
            <summary>
            Passwords to key.
            </summary>
            <param name="password">The user password.</param>
            <param name="engineId">The engine ID.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.MD5AuthenticationProvider.ComputeHash(Lextm.SharpSnmpLib.ISnmpMessage)">
            <summary>
            Computes the hash.
            </summary>
            <param name="message">The message.</param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.MD5AuthenticationProvider.CleanDigest">
            <summary>
            Gets the clean digest.
            </summary>
            <value>The clean digest.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Security.SaltGenerator">
            <summary>
            Salt generator.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.SaltGenerator.NextSalt">
            <summary>
            Get next salt Int64 value. Used internally to encrypt data.
            </summary>
            <returns>Random Int64 value</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.SaltGenerator.GetSaltBytes">
            <summary>
            Gets salt bytes.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Security.Levels">
            <summary>
            Security level.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.Security.Levels.None">
            <summary>
            Without authentication and without privacy.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.Security.Levels.Authentication">
            <summary>
            Authentication flag.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.Security.Levels.Privacy">
            <summary>
            Privacy flag.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.Security.Levels.Reportable">
            <summary>
            Reportable flag.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Security.ProviderPair">
            <summary>
            A pair of providers. One is for authentication, and the other is for privacy.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.ProviderPair.#ctor(Lextm.SharpSnmpLib.Security.IAuthenticationProvider,Lextm.SharpSnmpLib.Security.IPrivacyProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Security.ProviderPair"/> class.
            </summary>
            <param name="authentication">The authentication.</param>
            <param name="privacy">The privacy.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.ProviderPair.ToSecurityLevel">
            <summary>
            Toes the security level.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.ProviderPair.Authentication">
            <summary>
            Gets the authentication.
            </summary>
            <value>The authentication.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.ProviderPair.Privacy">
            <summary>
            Gets the privacy.
            </summary>
            <value>The privacy.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.ProviderPair.Default">
            <summary>
            Gets the default.
            </summary>
            <value>The default.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Security.UserRegistry">
            <summary>
            A repository to store user information for providers.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.UserRegistry.Add(Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.Security.ProviderPair)">
            <summary>
            Adds the specified user name.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="pair">The pair.</param>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Security.SHA1AuthenticationProvider">
            <summary>
            Authentication provider using SHA-1.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.SHA1AuthenticationProvider.#ctor(Lextm.SharpSnmpLib.OctetString)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Security.SHA1AuthenticationProvider"/> class.
            </summary>
            <param name="phrase">The phrase.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.SHA1AuthenticationProvider.PasswordToKey(System.Byte[],System.Byte[])">
            <summary>
            Passwords to key.
            </summary>
            <param name="password">The user password.</param>
            <param name="engineId">The engine ID.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.SHA1AuthenticationProvider.ComputeHash(Lextm.SharpSnmpLib.ISnmpMessage)">
            <summary>
            Computes the hash.
            </summary>
            <param name="message">The message.</param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.SHA1AuthenticationProvider.CleanDigest">
            <summary>
            Gets the clean digest.
            </summary>
            <value>The clean digest.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Sequence">
            <summary>
            Array type.
            </summary>
            <remarks>Represents SMIv1 SEQUENCE.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Sequence.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Sequence.#ctor(Lextm.SharpSnmpLib.ISnmpData[])">
            <summary>
            Creates an <see cref="T:Lextm.SharpSnmpLib.Sequence"/> instance with varied <see cref="T:Lextm.SharpSnmpLib.ISnmpData"/> instances.
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Sequence.#ctor(System.Collections.IEnumerable)">
            <summary>
            Creates an <see cref="T:Lextm.SharpSnmpLib.Sequence"/> instance with varied <see cref="T:Lextm.SharpSnmpLib.ISnmpData"/> instances.
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Sequence.#ctor(System.Byte[])">
            <summary>
            Creates an <see cref="T:Lextm.SharpSnmpLib.Sequence"/> instance from raw bytes.
            </summary>
            <param name="raw">Raw bytes</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Sequence.#ctor(System.Int32,System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Sequence"/> class.
            </summary>
            <param name="length">The length.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Sequence.ToBytes">
            <summary>
            To byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Sequence.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Sequence.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Sequence"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Sequence.Items">
            <summary>
            <see cref="T:Lextm.SharpSnmpLib.ISnmpData"/> instances containing in this <see cref="T:Lextm.SharpSnmpLib.Sequence"/>
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Sequence.Count">
            <summary>
            Data count in this <see cref="T:Lextm.SharpSnmpLib.Sequence"/>.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Sequence.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Lextm.SharpSnmpLib.ISnmpData"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Sequence.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.SetRequestPdu">
            <summary>
            SET request PDU.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.SetRequestPdu.#ctor(System.Int32,Lextm.SharpSnmpLib.ErrorCode,System.Int32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.SetRequestPdu"/> instance with all contents.
            </summary>
            <param name="requestId">The request id.</param>
            <param name="errorStatus">Error status</param>
            <param name="errorIndex">Error index</param>
            <param name="variables">Variables</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.SetRequestPdu.#ctor(Lextm.SharpSnmpLib.Integer32,Lextm.SharpSnmpLib.Integer32,Lextm.SharpSnmpLib.Integer32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.SetRequestPdu"/> instance with all contents.
            </summary>
            <param name="requestId">The request id.</param>
            <param name="errorStatus">Error status</param>
            <param name="errorIndex">Error index</param>
            <param name="variables">Variables</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.SetRequestPdu.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.SetRequestPdu"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.SetRequestPdu.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.SetRequestPdu"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.SetRequestPdu.ToMessageBody(Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.OctetString)">
            <summary>
            Converts to message body.
            </summary>
            <param name="version">Prtocol version</param>
            <param name="community">Community name</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.SetRequestPdu.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.SetRequestPdu.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.SetRequestPdu.RequestId">
            <summary>
            Gets the request ID.
            </summary>
            <value>The request ID.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.SetRequestPdu.ErrorStatus">
            <summary>
            Gets the error status.
            </summary>
            <value>The error status.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.SetRequestPdu.ErrorIndex">
            <summary>
            Gets the index of the error.
            </summary>
            <value>The index of the error.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.SetRequestPdu.Variables">
            <summary>
            Variables.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.SetRequestPdu.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.DataFactory">
            <summary>
            Factory that creates <see cref="T:Lextm.SharpSnmpLib.ISnmpData"/> instances.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.DataFactory.CreateSnmpData(System.Byte[])">
            <summary>
            Creates an <see cref="T:Lextm.SharpSnmpLib.ISnmpData"/> instance from buffer.
            </summary>
            <param name="buffer">Buffer</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.DataFactory.CreateSnmpData(System.Int32,System.IO.Stream)">
            <summary>
            Creates an <see cref="T:Lextm.SharpSnmpLib.ISnmpData"/> instance from stream.
            </summary>
            <param name="stream">Stream.</param>
            <param name="type">Type code.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.DataFactory.CreateSnmpData(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Creates an <see cref="T:Lextm.SharpSnmpLib.ISnmpData"/> instance from buffer.
            </summary>
            <param name="buffer">Buffer</param>
            <param name="index">Index</param>
            <param name="count">Count</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.DataFactory.CreateSnmpData(System.IO.Stream)">
            <summary>
            Creates an <see cref="T:Lextm.SharpSnmpLib.ISnmpData"/> instance from stream.
            </summary>
            <param name="stream">Stream</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.SnmpType">
            <summary>
            SNMP type code. The values are tag values for SNMP types.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.Boolean">
            <summary>
            Boolean type.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.Integer32">
            <summary>
            INTEGER type. (SMIv1, SMIv2)
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.BitString">
            <summary>
            BITS type. (SMIv2)
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.OctetString">
            <summary>
            OCTET STRING type.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.Null">
            <summary>
            NULL type. (SMIv1)
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.ObjectIdentifier">
            <summary>
            OBJECT IDENTIFIER type. (SMIv1)
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.Real">
            <summary>
            Real type.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.Sequence">
            <summary>
            RFC1213 sequence for whole SNMP packet beginning
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.IPAddress">
            <summary>
            IpAddress type. (SMIv1)
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.Counter32">
            <summary>
            Counter32 type. (SMIv1, SMIv2)
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.Gauge32">
            <summary>
            Gauge32 type. (SMIv1, SMIv2)
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.TimeTicks">
            <summary>
            TimeTicks type. (SMIv1)
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.Opaque">
            <summary>
            Opaque type. (SMIv1)
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.NetAddress">
            <summary>
            Network Address. (SMIv1)
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.Counter64">
            <summary>
            Counter64 type. (SMIv2)
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.UInt32">
            <summary>
            Unsigned32 type. (SMIv2)
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.NoSuchObject">
            <summary>
            No such object exception.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.NoSuchInstance">
            <summary>
            No such instance exception.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.EndOfMibView">
            <summary>
            End of MIB view exception.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.GetRequestPdu">
            <summary>
            Get request PDU.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.GetNextRequestPdu">
            <summary>
            Get Next request PDU.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.GetResponsePdu">
            <summary>
            Get response PDU.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.SetRequestPdu">
            <summary>
            Set request PDU.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.TrapV1Pdu">
            <summary>
            Trap v1 PDU.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.GetBulkRequestPdu">
            <summary>
            Get Bulk PDU.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.InformRequestPdu">
            <summary>
            Inform PDU.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.TrapV2Pdu">
            <summary>
            Trap v2 PDU.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.ReportPdu">
            <summary>
            Report PDU. SNMP v3.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.TableCollection">
            <summary>
            SNMP table collection.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TableCollection.#ctor(Lextm.SharpSnmpLib.ObjectIdentifier,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.TableCollection"/> class.
            </summary>
            <param name="root">The root.</param>
            <param name="list">The list.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TableCollection.GetVariableAt(System.Int32[])">
            <summary>
            Gets the variable at.
            </summary>
            <param name="position">The position.</param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.TableCollection.IndexCount">
            <summary>
            Gets the rank.
            </summary>
            <value>The rank.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.TimeTicks">
            <summary>
            TimeTicks type.
            </summary>
            <remarks>Represents SNMP TimeTicks type.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TimeTicks.#ctor(System.UInt32)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.TimeTicks"/> instance with a specific count.
            </summary>
            <param name="count">Count</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TimeTicks.#ctor(System.Byte[])">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.TimeTicks"/> instance with raw bytes.
            </summary>
            <param name="raw">Raw bytes</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TimeTicks.#ctor(System.Int32,System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.TimeTicks"/> class.
            </summary>
            <param name="length">The length.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TimeTicks.ToUInt32">
            <summary>
            Returns an <see cref="T:System.Int32"/> that represents the current <see cref="T:Lextm.SharpSnmpLib.TimeTicks"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TimeTicks.ToDateTime">
            <summary>
            Returns <see cref="T:System.DateTime"/> representation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TimeTicks.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.TimeTicks"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:Lextm.SharpSnmpLib.TimeTicks"/>. </param>
            <returns><value>true</value> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.TimeTicks"/>; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TimeTicks.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:Lextm.SharpSnmpLib.TimeTicks"/>.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TimeTicks.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TimeTicks.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TimeTicks.Equals(Lextm.SharpSnmpLib.TimeTicks)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><value>true</value> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TimeTicks.op_Equality(Lextm.SharpSnmpLib.TimeTicks,Lextm.SharpSnmpLib.TimeTicks)">
            <summary>
            The equality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.TimeTicks"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.TimeTicks"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TimeTicks.op_Inequality(Lextm.SharpSnmpLib.TimeTicks,Lextm.SharpSnmpLib.TimeTicks)">
            <summary>
            The inequality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.TimeTicks"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.TimeTicks"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TimeTicks.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.TimeTicks"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TimeTicks.Equals(Lextm.SharpSnmpLib.TimeTicks,Lextm.SharpSnmpLib.TimeTicks)">
            <summary>
            The comparison.
            </summary> 
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.TimeTicks"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.TimeTicks"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.TimeTicks.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.TrapV1Pdu">
            <summary>
            Trap v1 PDU.
            </summary>
            <remarks>represents the PDU of trap v1 message.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TrapV1Pdu.#ctor(System.UInt32[],Lextm.SharpSnmpLib.IP,Lextm.SharpSnmpLib.Integer32,Lextm.SharpSnmpLib.Integer32,Lextm.SharpSnmpLib.TimeTicks,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.TrapV1Pdu"/> instance with PDU elements.
            </summary>
            <param name="enterprise">Enterprise</param>
            <param name="agent">Agent address</param>
            <param name="generic">Generic trap type</param>
            <param name="specific">Specific trap type</param>
            <param name="timestamp">Time stamp</param>
            <param name="variables">Variable binds</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TrapV1Pdu.#ctor(Lextm.SharpSnmpLib.ObjectIdentifier,Lextm.SharpSnmpLib.IP,Lextm.SharpSnmpLib.Integer32,Lextm.SharpSnmpLib.Integer32,Lextm.SharpSnmpLib.TimeTicks,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.TrapV1Pdu"/> instance with PDU elements.
            </summary>
            <param name="enterprise">Enterprise</param>
            <param name="agent">Agent address</param>
            <param name="generic">Generic trap type</param>
            <param name="specific">Specific trap type</param>
            <param name="timestamp">Time stamp</param>
            <param name="variables">Variable binds</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TrapV1Pdu.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.TrapV1Pdu"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TrapV1Pdu.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TrapV1Pdu.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TrapV1Pdu.ToMessageBody(Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.OctetString)">
            <summary>
            To message body.
            </summary>
            <param name="version">Protocol version</param>
            <param name="community">Community name</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TrapV1Pdu.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.TrapV1Pdu"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.TrapV1Pdu.RequestId">
            <summary>
            Gets the request ID.
            </summary>
            <value>The request ID.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.TrapV1Pdu.ErrorIndex">
            <summary>
            Gets the index of the error.
            </summary>
            <value>The index of the error.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.TrapV1Pdu.ErrorStatus">
            <summary>
            Gets the error status.
            </summary>
            <value>The error status.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.TrapV1Pdu.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.TrapV1Pdu.Enterprise">
            <summary>
            Enterprise.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.TrapV1Pdu.AgentAddress">
            <summary>
            Agent address.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.TrapV1Pdu.Generic">
            <summary>
            Generic trap type.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.TrapV1Pdu.Specific">
            <summary>
            Specific trap type.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.TrapV1Pdu.TimeStamp">
            <summary>
            Time stamp.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.TrapV1Pdu.Variables">
            <summary>
            Variable binds.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.TrapV2Pdu">
            <summary>
            TRAP v2 PDU.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TrapV2Pdu.#ctor(System.Int32,Lextm.SharpSnmpLib.ObjectIdentifier,System.UInt32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.TrapV2Pdu"/> instance with all content.
            </summary>
            <param name="requestId">Request ID.</param>
            <param name="enterprise">Enterprise.</param>
            <param name="time">Time stamp.</param>
            <param name="variables">Variables.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TrapV2Pdu.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.TrapV2Pdu"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TrapV2Pdu.ToMessageBody(Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.OctetString)">
            <summary>
            Converts to message body.
            </summary>
            <param name="version">Prtocol version</param>
            <param name="community">Community name</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TrapV2Pdu.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TrapV2Pdu.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TrapV2Pdu.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.TrapV2Pdu"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.TrapV2Pdu.Variables">
            <summary>
            Variables.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.TrapV2Pdu.RequestId">
            <summary>
            Gets the request ID.
            </summary>
            <value>The request ID.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.TrapV2Pdu.ErrorStatus">
            <summary>
            Gets the error status.
            </summary>
            <value>The error status.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.TrapV2Pdu.ErrorIndex">
            <summary>
            Gets the index of the error.
            </summary>
            <value>The index of the error.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.TrapV2Pdu.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.TrapV2Pdu.Enterprise">
            <summary>
            Enterprise.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.TrapV2Pdu.TimeStamp">
            <summary>
            Time stamp.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Variable">
            <summary>
            Variable bind.
            </summary>
            <remarks>
            <para>Represents SNMP variable bind.</para>
            </remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Variable.#ctor(Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Variable"/> instance with a specific <see cref="T:Lextm.SharpSnmpLib.ObjectIdentifier"/>.
            </summary>
            <param name="id">Object identifier</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Variable.#ctor(System.UInt32[])">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Variable"/> instance with a specific object identifier.
            </summary>
            <param name="id">Object identifier</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Variable.#ctor(System.UInt32[],Lextm.SharpSnmpLib.ISnmpData)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Variable"/> instance with a specific <see cref="T:Lextm.SharpSnmpLib.ObjectIdentifier"/> and <see cref="T:Lextm.SharpSnmpLib.ISnmpData"/>.
            </summary>
            <param name="id">Object identifier</param>
            <param name="data">Data</param>
            <remarks>If you set <c>null</c> to <paramref name="data"/>, you get a <see cref="T:Lextm.SharpSnmpLib.Variable"/> instance whose <see cref="P:Lextm.SharpSnmpLib.Variable.Data"/> is a <see cref="T:Lextm.SharpSnmpLib.Null"/> instance.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Variable.#ctor(Lextm.SharpSnmpLib.ObjectIdentifier,Lextm.SharpSnmpLib.ISnmpData)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Variable"/> instance with a specific object identifier and data.
            </summary>
            <param name="id">Object identifier</param>
            <param name="data">Data</param>
            <remarks>If you set <c>null</c> to <paramref name="data"/>, you get a <see cref="T:Lextm.SharpSnmpLib.Variable"/> instance whose <see cref="P:Lextm.SharpSnmpLib.Variable.Data"/> is a <see cref="T:Lextm.SharpSnmpLib.Null"/> instance.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Variable.Transform(Lextm.SharpSnmpLib.Sequence)">
            <summary>
            Converts varbind section to variable binds list.
            </summary>
            <param name="varbindSection"></param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Variable.Transform(System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Converts variable binds to varbind section.
            </summary>
            <param name="variables"></param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Variable.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Variable"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Variable.Id">
            <summary>
            Variable object identifier.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Variable.Data">
            <summary>
            Variable data.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.VersionCode">
            <summary>
            Protocol version code.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.VersionCode.V1">
            <summary>
            SNMP v1.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.VersionCode.V2">
            <summary>
            SNMP v2 classic.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.VersionCode.V3">
            <summary>
            SNMP v3.
            </summary>
        </member>
    </members>
</doc>
